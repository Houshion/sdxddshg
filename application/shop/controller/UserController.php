<?php
/**
 * Created by PhpStorm.
 * User: 韩令恺
 * Date: 2018/5/21 0021
 * Time: 14:31
 */

namespace app\shop\controller;
use Think\Db; 
use think\Session;

class UserController extends BaseController
{
    public $url = '';
    public $authStatus = array(0=>'未认证',1=>'已认证');
    public $id;
    public $type;
    public function _initialize(){
        parent::_initialize();
        // TODO: Change the autogenerated stub
        $this->url = request()->root(true).'/public/';
        $this->type = Session::get('MMS.type');//子后台登录帐号类型（1：商家 2：员工）
        $aid=Session::get('MMS.uid');
        if($this->type == 1){
            $this->id=Db::name('shop')->where(['aid'=>$aid])->value('shop_id');//商家ID
        }else{
            $this->id = $aid;//员工ID
        }
        $this->assign('type',$this->type);
    }
/************************* 用户列表开始 **************************/

    //用户列表
    public function index(){
        $bread = array(
            '0' => array(
                'name' => '帐号管理',
                'url' => url('shop/User/index'), 
            ), 
            '1' => array(
                'name' => '用户列表',
                'url' => url('shop/User/index'), 
            ), 
        );
        $condition['type'] = 1;
        $user_type = input('user_type');
        $auth      = input('auth');
        if ($_GET['nickname']){
            $condition['nickname'] = ['like','%'.$_GET['nickname'].'%'];
            $this->assign('nickname',$_GET['nickname']);
        }
        if ($_GET['mobile']){
            $condition['mobile'] = ['like','%'.$_GET['mobile'].'%'];
            $this->assign('mobile',$_GET['mobile']);
        }
        if ($user_type){
            $condition['user_type'] = $user_type;
            $this->assign('user_type',$user_type);
        }
        if ($auth){
            if($auth == 1){
                $condition['auth'] = 0;
            }else{
                $condition['auth'] = $auth;
            }
            $this->assign('auth',$auth);
        }
        if($this->type==1){
            $condition['shop_id']=$this->id;
        }else{
            $condition['user_id']=$this->id;
        }
        $psize = 10;
        $page = input('page')?input('page'):1;
        $result = model('user')->get_list($condition,'*',$page,$psize);
        //处理分页
        $count = model('user')->where($condition)->count();

        $result = $result->toArray();
        foreach ($result as $k=>$v){
            if (strpos($v['head_img'],'uploads')){
                $result[$k]['head_img'] = $this->url.$v['head_img'];
            }
            $result[$k]['auth'] = $this->authStatus[$v['auth']];
        }

        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $psize, 'App-loader', '用户列表', 'App-search');
        $this->assign('empty','<tr><td colspan="9" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch();
    }

    //用户更改/新增数据
    public function edit(){
        $user_id = input('user_id');
        $post = $_POST;
        $bread = array(
            '0' => array(
                'name' => '帐号管理',
                'url' => url('shop/User/index'), 
            ), 
            '1' => array(
                'name' => $user_id ? '编辑用户':'新增用户',
                'url' => url('shop/User/edit?user_id='.$user_id), 
            ), 
        );
        $this->assign('breadhtml', $this->getBread($bread));
      
        if ($user_id){ //更新数据
            if ($post){ //提交数据
                $update = input('post.');
                // $update = array(
                //     'nickname'  =>  $post['nickname'],
                //     'mobile'    =>  $post['mobile']
                // );
                $result = model('user')->get_update(['user_id'=>$user_id],$update);
                if ($result){
                    $info['status'] = 1;
                    $info['msg'] = '修改成功';
                }else{
                    $info['status'] = 0;
                    $info['msg'] = '修改失败';
                }
                return($info);
            }else{ //跳转页面
                $result = model('user')->get_row(['user_id'=>$user_id]);
                $result = $result->toArray();
                $result['auth'] = $this->authStatus[$result['auth']];
                //可能没拼接对，到时候测试一下
                // if (strpos($result['head_img'],'/imgs')){
                //     $result['head_img'] = $this->url.$result['head_img'];
                // }
                
                $this->assign('result',$result);
                echo $this->fetch();
            }
        }else{ //新增数据
            $insertData = array(
                'nickname'  =>  $post['nickname'],
                'mobile'    =>  $post['mobile']
            );
            $result = model('user')->get_insert($insertData);
            if ($result){
                $info['status'] = 1;
                $info['msg'] = '添加成功';
            }else{
                $info['status'] = 0;
                $info['msg'] = '添加失败';
            }
            return($info);
        }
    }

    //删除用户数据
    public function delete(){
        $user_id = input('user_id');
        if (!$user_id) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res = model('user')->get_delete(['user_id'=>$user_id]);
        if ($res){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }

    //用户设备收藏列表
    public function collect()
    {
        $pages = input('pages');
        $user_id= input('user_id');
        $bread = array(
            '0' => array(
                'name' => '帐号管理',
                'url' => url('shop/User/index'), 
            ), 
            '1' => array(
                'name' => '用户列表',
                'url' => url('shop/User/index'), 
            ), 
            '2' => array(
                'name' => '用户收藏列表',
                'url' => url('shop/User/collect'), 
            ), 
        );
        $this->assign('breadhtml', $this->getBread($bread));
        $macno  = input('macno');
        $username= input('username');
        $page   = input('p')? : 1;
        $size   =   self::$MMS['set']['pagesize']?:20;
        $map['b.user_id']= $user_id;
        if($macno){
            $map['c.macno'] = ['like','%'.$macno.'%'];
            $this->assign('macno',$macno);
        }
        if($username){
            $map['b.username'] = ['like','%'.$username.'%'];
            $this->assign('username',$username);
        }
        $field= ['a.*,b.username ,c.macno'];
        $order= 'a.ctime desc';
        $result = Db::name('favorite')->alias('a')
                ->join('shop_user b','b.user_id=a.user_id','left')
                ->join('shop_device c','c.device_id=a.device_id','left')
                ->where($map)
                ->order($order)->page($page,$size)
                ->field($field)->select();

        $count =  Db::name('favorite')->alias('a')
                ->join('shop_user b','b.user_id=a.user_id','left')
                ->join('shop_device c','c.device_id=a.device_id','left')
                ->where($map)
                ->order($order)->page($page,$size)
                ->field($field)->count();
        $this->getPage($count, $size, 'App-loader', '用户收藏列表', 'App-search');
        $this->assign('empty','<tr><td colspan="9" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        $this->assign('result',$result);
        $this->assign('p',$page);
        $this->assign('user_id',$user_id);
        $this->assign('pages',$pages);
        echo $this->fetch('collect');
    }

    //删除用户数据（多选）
    public function clear(){
        $userIdArr = explode(',',substr(input('user_id'),0,strlen(input('user_id'))-1));
        $res = model('user')->get_delete(['user_id'=>['in',$userIdArr]]);
        if ($res){
            $info['status'] = 1;
            $info['msg'] = '清除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '清除失败';
        }
        return($info);
    }


    //用户优惠列表
    public function userDiscounts()
    {
        $pages = input('pages');
        $user_id= input('user_id');
        $bread = array(
            '0' => array(
                'name' => '帐号管理',
                'url' => url('shop/User/index'), 
            ), 
            '1' => array(
                'name' => '用户列表',
                'url' => url('shop/User/index'), 
            ), 
            '2' => array(
                'name' => '用户优惠列表',
                'url' => url('shop/User/userDiscounts'), 
            ), 
        );
        $this->assign('breadhtml', $this->getBread($bread));
        $status = input('status');
        $page   = input('p')? : 1;
        $size   = self::$MMS['set']['pagesize']?:20;
        $map['b.user_id']= $user_id;
        if($status){
            if($status== 2){
                $map['a.status'] = 0;
            }else{
                $map['a.status'] = $status;
            }
        }
        $field= ['a.*'];
        $order= 'a.ctime desc';
        $result = Db::name('coupon_log')->alias('a')
                ->join('shop_user b','b.user_id=a.user_id','left')
                ->where($map)
                ->order($order)->page($page,$size)
                ->field($field)->select();

        $count = Db::name('coupon_log')->alias('a')
                ->join('shop_user b','b.user_id=a.user_id','left')
                ->where($map)
                ->order($order)->count();
        $this->getPage($count, $size, 'App-loader', '用户收藏列表', 'App-search');
        $this->assign('empty','<tr><td colspan="9" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        $this->assign('result',$result);
        $this->assign('p',$page);
        $this->assign('user_id',$user_id);
        $this->assign('pages',$pages);
        echo $this->fetch('userDiscounts');
    }

    //删除用户优惠列表
    public function userDiscountsDel(){
        $id = input('id');
        if (!$id) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res = Db::name('coupon_log')->where('id','in',$id)->delete();
        if ($res){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }

    public function exportSelect(){
        // $device = M('device')->field('device_id,title')->order('device_id desc')->select();
        // $user    = M('user')->field('user_id,nickname')->where(array('nickname'=>array('NEQ',"")))->order('user_id desc')->select();
        // $this->assign('device', $device);
        $this->assign('user', $user);
        echo $this->fetch('exportSelect');
    }

    //用户数据导出
    public function userExport()
    {
        $user_type = input('user_type');
        $start     = input('start');
        $end       = input('end');
        $auth      = input('auth');
        if($user_type != 0){
            $map['user_type'] = $user_type;
        }
        if($auth != 0){
           if($auth == 1){
            $map['auth'] = ['neq',2];
           }else{
            $map['auth'] = $auth;
           }
        }
     if($end != 0){
            $map['ctime'] = ['lt',strtotime($end.' 23:59:59')];
        }elseif($start != 0){
            $map['ctime'] = ['gt',strtotime($start)];
        }elseif($end !=0 && $start !=0){
        $start_time = strtotime($start);
        $end_time = strtotime($end.'23:59:59:');
        $map['ctime'] = ['between',[$start_time,$end_time]];
    }else{}
        $map['type']  = 1;
        $filename = '用户信息';
        $field = ['user_id','nickname','mobile','money','ctime','user_type','auth'];
        $data = Db::name('user')->where($map)->field($field)->order('ctime desc')->select();
        foreach ($data as $key => $value) {
            if($value['user_type'] == 1){   
                $data[$key]['user_type'] = '小程序';
            }else{
                $data[$key]['user_type'] = '生活号';
            }
            if($value['auth'] == 2){
                $data[$key]['auth'] = '已认证';
            }else{
                $data[$key]['auth'] = '未认证';
            }
            if($value['mobile'] == ''){
                $data[$key]['mobile'] = '暂未绑定';
            }
            $data[$key]['ctime'] = date('Y-m-d H:i:s',$value['ctime']);
        }
        $Field = ['id','用户昵称','手机号','余额','关注时间','帐号类型','认证状态'];
        $this ->exportexcel($data,$Field,$filename);
    }
/************************* 用户列表结束**************************/

/************************* 商家列表开始 **************************/
    //商家列表
    public function shop()
    {
        $bread = array(
            '0' => array(
                'name' => '商家管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => '商家列表',
                'url' => url('shop/User/shop'), 
            ), 
        );
        $user_name = input('user_name');
        if($user_name){
            $map['a.user_name'] = ['like','%'.$user_name.'%'];
            $this->assign('user_name',$user_name);
        }
        $size = 10;
        $page = input('p')?input('p'):1;
        $result = Db::name('shop')->alias('a')
                  ->join('admin b','b.id=a.aid','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.username')
                  ->page($page,$size)->select();
        $count  = Db::name('shop')->alias('a')
                  ->join('admin b','b.id=a.aid','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.username')->count();
        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '商家列表', 'App-search');
        $this->assign('empty','<tr><td colspan="9" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('');
    }

    //商家新增/编辑
    public function shopSet()
    {
        $id = input('shop_id');
        $p  = input('p');
        $bread = array(
            '0' => array(
                'name' => '商家管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => $id ? '编辑商家':'新增商家',
                'url' => url('shop/User/shopSet'), 
            ), 
        );
        if($_POST){
            $post = input('post.');
            if($id){
                $data1['user_name'] = $post['user_name'];
                $data1['user_phone']= $post['user_phone'];
                $data1['account']   = $post['account'];
                $data1['memo']      = $post['memo'];
                if($post['password2'] != ''){
                    $data1['password'] = md5($post['password2']);
                }
                if($post['password1'] != ''){
                    $data2['password'] = md5($post['password1']);
                }
                $data2['username'] = $post['username'];
                $res1 = Db::name('shop')->where('shop_id',$id)->update($data1);
                $res2 = Db::name('admin')->where('id',$post['aid'])->update($data2);
            }else{
                $data1['user_name'] = $post['user_name'];
                $data1['user_phone']= $post['user_phone'];
                $data1['account']   = $post['account'];
                $data1['memo']      = $post['memo'];
                $data1['password'] = md5($post['password2']);
                $data1['ctime']    = time();

                $data2['password'] = md5($post['password1']);
                $data2['username'] = $post['username'];
                $data2['type']     = 2;
                $res1 = Db::name('admin')->insertGetId($data2);
                $data1['aid'] = $res1;
                $res2 = Db::name('shop')->insert($data1);
            }
            if($res1 !== false && $res2 !== false){
                $info['status'] = 1;
                $info['msg']    = $id ? '编辑商家成功':'添加商家成功';
            }else{
                $info['status'] = 0;
                $info['msg']    = $id ? '编辑商家失败':'添加商家失败';
            }
            return($info);
        }
        $result = Db::name('shop')->alias('a')
                  ->join('admin b','b.id=a.aid','left')
                  ->where('a.shop_id',$id)->order('a.ctime desc')
                  ->field('a.*,b.username')->find();
        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->assign('shop_id',$id);
        $this->assign('p',$p);
        echo $this->fetch('shopSet');
    }

    //商家删除
    public function shopDel()
    {
        $id = input('id');
        if (empty($id)) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res1 = Db::name('shop')->where(['shop_id'=>['in',$id]])->delete();
        $res2 = Db::name('user')->where(['shop_id'=>['in',$id]])->update(['shop_id'=>'-1']);
        $res3 = Db::name('device')->where(['shop_id'=>['in',$id]])->update(['shop_id'=>'-1']);
        $res4 = Db::name('network')->where(['shop_id'=>['in',$id]])->update(['shop_id'=>'-1']);
        if ($res1 !==false && $res2 !== false && $res3 !== false && $res4 !== false){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }

    //商家设备列表
    public function shopDevice()
    {
        $id= input('id');
        $type = input('type');
        $bread = array(
           '0' => array(
                'name' => '菜单设置',
                'url' => url('shop/Admin/adminList'), 
            ), 
            '1' => array(
                'name' => '管理员信息',
                'url' => url('shop/Admin/adminList'),
            ),
            '2' => array(
                'name' => $type==1 ?'商家设备列表':'员工设备列表',
                'url' => url('shop/User/shopDevice'), 
            ), 
        );
        $title  = input('title');
        $macno  = input('macno');
        $address= input('address');
        $status = input('status');
        if($type==1){
           $map['a.shop_id'] = $id; 
           $name = '商品设备列表'; 
        }else{
           $map['a.user_id'] = $id;  
           $name = '员工设备列表'; 
        }
        if($title){
            $map['a.title'] = ['like','%'.$title.'%'];
            $this->assign('title',$title);
        }
        if($address){
            $map['b.address'] = ['like','%'.$address.'%'];
            $this->assign('address',$address);
        }
        if($macno){
            $map['a.macno'] = ['like','%'.$macno.'%'];
            $this->assign('macno',$macno);
        }
        if($status){
            if($status == '-1'){
                 $map['a.status'] = 0;
            }else{
                $map['a.status'] = $status;
            }
            $this->assign('status',$status);
        }
        $macno = input('macno');
        if($macno){
            $map['a.user_name'] = ['like','%'.$user_name.'%'];
            $this->assign('user_name',$user_name);
        }
        $size = 10;
        $page = input('p')?input('p'):1;
        $result = Db::name('device')->alias('a')
                  ->join('network b','b.network_id=a.network_id','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.address')
                  ->page($page,$size)->select();
        $count  = Db::name('device')->alias('a')
                  ->join('network b','b.network_id=a.network_id','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.address')->count();
        $this->assign('name',$name);
        $this->assign('result',$result);
        $this->assign('id',$id);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', $name, 'App-search');
        $this->assign('empty','<tr><td colspan="11" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('shopDevice');
    }

    //员工设备列表
    public function shopDevice1()
    {
        $id= input('id');
        $bread = array(
           '0' => array(
                'name' => '员工管理',
                'url' => url('shop/user/staff'), 
            ), 
            '1' => array(
                'name' => '员工管理列表',
                'url' =>url('shop/user/staff'),
            ),
            '2' => array(
                'name' => '员工设备列表',
                'url' => url('shop/User/shopDevice1'), 
            ), 
        );
        $title  = input('title');
        $macno  = input('macno');
        $address= input('address');
        $status = input('status');
        $map['a.user_id'] = $id;  
        $name = '员工设备列表'; 
        
        if($title){
            $map['a.title'] = ['like','%'.$title.'%'];
            $this->assign('title',$title);
        }
        if($address){
            $map['b.address'] = ['like','%'.$address.'%'];
            $this->assign('address',$address);
        }
        if($macno){
            $map['a.macno'] = ['like','%'.$macno.'%'];
            $this->assign('macno',$macno);
        }
        if($status){
            if($status == '-1'){
                 $map['a.status'] = 0;
            }else{
                $map['a.status'] = $status;
            }
            $this->assign('status',$status);
        }
        $macno = input('macno');
        if($macno){
            $map['a.user_name'] = ['like','%'.$user_name.'%'];
            $this->assign('user_name',$user_name);
        }
        $size = 10;
        $page = input('p')?input('p'):1;
        $result = Db::name('device')->alias('a')
                  ->join('network b','b.network_id=a.network_id','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.address')
                  ->page($page,$size)->select();
        $count  = Db::name('device')->alias('a')
                  ->join('network b','b.network_id=a.network_id','left')
                  ->where($map)->order('a.ctime desc')
                  ->field('a.*,b.address')->count();
        $this->assign('name',$name);
        $this->assign('result',$result);
        $this->assign('id',$id);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', $name, 'App-search');
        $this->assign('empty','<tr><td colspan="11" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('shopDevice1');
    }

    //商家网点列表
    public function shopNetwork()
    {
        $id= input('id');
        $bread = array(
           '0' => array(
                'name' => '菜单设置',
                'url' => url('shop/Admin/adminList'), 
            ), 
           '0' => array(
                'name' => '管理员信息',
                'url' => url('shop/Admin/adminList'), 
            ), 
            '1' => array(
                'name' => '商家网点列表',
                'url' => url('shop/User/shopNetwork'), 
            ), 
        );
        $title  = input('title');
        $macno  = input('macno');
        $address= input('address');
        $status = input('status');
        $map['a.shop_id'] = $id;
        $title  = input('title');
        $address= input('address');
        $page   = input('p')? : 1;
        $size   =  self::$MMS['set']['pagesize']?:20;
        if($title){
            $map['a.title'] = ['like','%'.$title.'%'];
            $this->assign('title',$title);
        }
        if($address){
            $map['a.address'] = ['like','%'.$address.'%'];
            $this->assign('address',$address);
        }
        $field= ['a.*,b.user_name ,c.name as p_name,d.name as c_name,e.name as a_name'];
        $order= 'a.ctime desc';
        $result = Db::name('network')->alias('a')
                ->join('shop b','b.shop_id=a.shop_id','left')
                ->join('location c','c.location_id=a.province','left')
                ->join('location d','d.location_id=a.city','left')
                ->join('location e','e.location_id=a.area','left')
                ->where($map)
                ->order($order)->page($page,$size)
                ->field($field)->select();
        $count  = Db::name('network')->alias('a')
                ->join('shop b','b.shop_id=a.shop_id','left')
                ->join('location c','c.location_id=a.province','left')
                ->join('location d','d.location_id=a.city','left')
                ->join('location e','e.location_id=a.area','left')
                ->where($map)->count();
        $this->assign('result',$result);
        $this->assign('pages',$p);
        $this->assign('id',$id);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '商家网点列表', 'App-search');
        $this->assign('empty','<tr><td colspan="6" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('shopNetwork');
    }

    //商家员工列表
    public function shopStaff()
    {
        $id= input('id');
        $bread = array(
            '0' => array(
                'name' => '菜单设置',
                'url' => url('shop/Admin/adminList'), 
            ), 
           '0' => array(
                'name' => '管理员信息',
                'url' => url('shop/Admin/adminList'), 
            ), 
            '1' => array(
                'name' => '商家员工列表',
                'url' => url('shop/User/shopStaff'), 
            ), 
        );
        $map['shop_id'] = $id;
        $username  = input('username');
        $mobile    = input('mobile');
        $page   = input('p')? : 1;
        $size   =   self::$MMS['set']['pagesize']?:20;
        if($username){
            $map['username'] = ['like','%'.$username.'%'];
            $this->assign('username',$username);
        }
        if($mobile){
            $map['mobile'] = ['like','%'.$mobile.'%'];
            $this->assign('mobile',$mobile);
        }
        if($address){
            $map['a.address'] = ['like','%'.$address.'%'];
            $this->assign('address',$address);
        }
        $result = Db::name('user')->where($map)->order('ctime desc')->page($page,$size)->select();
        $count  = Db::name('user')->where($map)->order('ctime desc')->count();
        $this->assign('result',$result);
        $this->assign('id',$id);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '商家员工列表', 'App-search');
        $this->assign('empty','<tr><td colspan="5" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('shopStaff');
    }

    //加盟申请列表
    public function apply()
    {
        $bread = array(
            '0' => array(
                'name' => '商家管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => '加盟申请列表',
                'url' => url('shop/User/apply'), 
            ), 
        );
        $username = input('username');
        $user_name= input('user_name');
        if($username){
            $map['b.username'] = ['like','%'.$username.'%'];
            $this->assign('username',$username);
        }
        if($user_name){
            $map['a.user_name'] = ['like','%'.$user_name.'%'];
            $this->assign('user_name',$user_name);
        }
        $page = input('p') ? : 1;
        $size = 20;
        $result = Db::name('cooperation')->alias('a')
                  ->join('shop_user b','b.user_id=a.user_id','left')
                  ->where($map)->page($page,$size)->field('a.*,b.username')
                  ->order('a.ctime desc')->select();
        $count = Db::name('cooperation')->alias('a')
                  ->join('shop_user b','b.user_id=a.user_id','left')
                  ->where($map)->count();
        $this->assign('result',$result);
        $this->assign('page',$page);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '加盟申请列表', 'App-search');
        $this->assign('empty','<tr><td colspan="5" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('apply');
    }

     //加盟申请删除
    public function applyDel()
    {
        $id = input('id');
        if (empty($id)) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res1 = Db::name('cooperation')->where(['id'=>['in',$id]])->delete();
        if ($res1 !==false){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }

    //商家每日收益列表
    public function shopEarnings()
    {
        $id = input('id');
        $pages = input('pages');
        $bread = array(
            '0' => array(
                'name' => '商家管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => '商家列表',
                'url' => url('shop/User/shop'), 
            ), 
            '2' => array(
                'name' => '每日收益',
                'url' => url('shop/User/shopEarnings'), 
            ), 
        );
        $map['shop_id']= $this->id;
        $page = input('p') ? : 1;
        $size = 20;
        $result = Db::name('shop_count')
                  ->where($map)->page($page,$size)
                  ->order('cdate desc')->select();
        $count = Db::name('shop_count')
                  ->where($map)->page($page,$size)
                  ->order('cdate desc')->count();
        $this->assign('result',$result);
        $this->assign('id',$id);
        $this->assign('pages',$pages);
        $this->assign('page',$page);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '每日收益列表', 'App-search');
        $this->assign('empty','<tr><td colspan="6" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('shopEarnings');
    }


    //商家每日收益删除
    public function shopEarningsDel()
    {
        $id = input('id');
        if (empty($id)) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res1 = Db::name('shop_count')->where(['count_id'=>['in',$id]])->delete();
        if ($res1 !==false){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }

/************************* 商家列表结束 **************************/

/************************* 员工列表开始 **************************/
    //员工列表
    public function staff()
    {
        $bread = array(
            '0' => array(
                'name' => '员工管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => '员工列表' ,
                'url' => url('shop/User/staff'), 
            ), 
        );
        $username  = trim(input('username'));
        $mobile    = trim(input('mobile'));
        $shop_id      = input('shop_id');
        $page   = input('page')? : 1;
        $size   =  self::$MMS['set']['pagesize']?:20;
        $map['type'] = 2;
        if($username){
            $map['a.username'] = ['like','%'.$username.'%'];
            $this->assign('username',$username);
        }
        if($mobile){
            $map['a.mobile'] = ['like','%'.$mobile.'%'];
            $this->assign('mobile',$mobile);
        }
        $map['a.shop_id'] =$this->shop_id;

//        if($shop_id){
//            $map['a.shop_id'] = $shop_id;
//            $this->assign('shop_id',$shop_id);
//        }
        if($this->type==1){
           $map['a.shop_id']=$this->id;
        }
        $result = Db::name('user')->alias('a')
                ->join('shop b','b.shop_id=a.shop_id','left')
                ->where($map)->order('a.ctime desc')
                ->field('a.*,b.user_name')->page($page,$size)->select();
        $count  = Db::name('user')->alias('a')
                ->join('shop b','b.shop_id=a.shop_id','left')->where($map)->order('a.ctime desc')->count();

//        $shop  = Db::name('shop')->select();
//        $this->assign('shop',$shop);
        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '员工列表', 'App-search');
        $this->assign('empty','<tr><td colspan="5" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch('staff');
    }

    //员工新增/编辑
    public function staffSet()
    {
        $id = input('user_id');
        $p  = input('p');
        $bread = array(
           '0' => array(
                'name' => '商家管理',
                'url' => url('shop/User/shop'), 
            ), 
            '1' => array(
                'name' => $id ? '员工编辑':'员工新增',
                'url' => url('shop/User/staffSet'), 
            ), 
        );
        if($_POST){
            $post = input('post.');
            if($id){
                $data1['username'] = $post['username'];
                $data1['nickname']= $post['username'];
                $bool= $this->check_mobile($post['mobile']);
                if($bool==false){
                    $info['status'] = 0;
                    $info['msg']    = '移动端登录帐号不能，只能是手机格式2';
                    return($info);
                }
                $find = Db::name('user')->where(['user_id'=>['neq',$id],'mobile'=>$post['mobile'],'type'=>2])->find();
                if($find){
                    $info['status'] = 0;
                    $info['msg']    = '此帐号已被注册过了';
                    return($info);
                }
                $data1['mobile']   = $post['mobile'];

                if($post['password'] != ''){
                    $data1['userpass'] = md5($post['password']);
                }
                Db::name('device')->where('user_id',$id)->update(['user_id'=>0]);
                $res1 = Db::name('user')->where('user_id',$id)->update($data1);
            }else{
                $data1['username'] = $post['username'];
                $data1['nickname']= $post['username'];
                $data1['userpass'] = md5($post['password']);
                $data1['shop_id']  = $post['shop_id'];
                $bool= $this->check_mobile($post['mobile']);
                if($bool==false){
                    $info['status'] = 0;
                    $info['msg']    = '移动端登录帐号不能，只能是手机格式2';
                    return($info);
                }
                $find = Db::name('user')->where(['user_id'=>['neq',$id],'mobile'=>$post['mobile'],'type'=>2])->find();
                if($find){
                    $info['status'] = 0;
                    $info['msg']    = '此帐号已被注册过了';
                    return($info);
                }
                $data1['mobile']   = $post['mobile'];
                $data1['ctime']    = time();
                $data1['type']     = 2;

                $res1 = Db::name('user')->insert($data1);
            }
            if($res1 !== false){
                $info['status'] = 1;
                $info['msg']    = $id ? '编辑员工成功':'添加员工成功';
            }else{
                $info['status'] = 0;
                $info['msg']    = $id ? '编辑员工失败':'添加员工失败';
            }
            return($info);
        }
        $result = Db::name('user')->where('user_id',$id)->find();
        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->assign('user_id',$id);
        $this->assign('shop_id',$this->shop_id);
        $this->assign('p',$p);
        echo $this->fetch('staffSet'); 
    }

    //员工删除
    public function staffDel()
    {
        $id = input('id');
        if (empty($id)) {
            $info['status'] = 0;
            $info['msg'] = 'ID不能为空!';
            return($info);
        }
        $res1 = Db::name('user')->where(['user_id'=>['in',$id]])->delete();
        $res2 = Db::name('device')->where(['user_id'=>['in',$id]])->update(['user_id'=>0]);
        if ($res1 !==false || $res2 !== false){
            $info['status'] = 1;
            $info['msg'] = '删除成功';
        }else{
            $info['status'] = 0;
            $info['msg'] = '删除失败';
        }
        return($info);
    }
    /*
     * 员工补货记录
     */
    public function replenishment()
    {
        $bread = array(
            '0' => array(
                'name' => '员工管理',
                'url' => url('shop/user/staff'),
            ),
            '1' => array(
                'name' => '员工补货列表',
                'url' => url('shop/user/replenishment'),
            ),
        );
        $this->assign('breadhtml', $this->getBread($bread));
        $page = input('p') ? :1;
        $size = 20;
        $staff_type = input('staff_type');
        $macno    = trim(input('macno'));
//        $username    = trim(input('username'));
        $order_number    = trim(input('order_number'));
        $status   = input('status');
        $staff_id= input('id');
       if($staff_id){
           $map['a.staff_id'] = $staff_id;
           $this->assign('staff_id',$staff_id);
       }
        if($staff_type){
            $map['a.staff_type'] = $staff_type;
            $this->assign('username',$staff_type);
        }
        if($status){
            $map['a.status'] = $status;
            $this->assign('status',$status);
        }
        if($macno){
            $map['c.macno'] = ['like','%'.$macno.'%'];
            $this->assign('macno',$macno);
        }
//        if($username){
//            $map['d.username'] = ['like','%'.$username.'%'];
//            $this->assign('username',$username);
//        }
        if($order_number){
            $map['a.order_number'] = ['like','%'.$order_number.'%'];
            $this->assign('order_number',$order_number);
        }
//        if($this->type==1){ //商家
//            $map['a.staff_id']=$this->id;
//            $map['a.staff_type'] = 2;
//        }elseif ($this->type==2){ //员工
//            $map['a.staff_id']=$this->id;
//            $map['a.staff_type'] = 1;
//        }
        $map['a.shop_id']=$this->id;
        $result = Db::name('device_order')->alias('a')
            ->join('shop b','b.shop_id=a.shop_id','left')
            ->join('device c','c.device_id=a.device_id','left')
            ->join('user d','d.user_id=a.staff_id','left')
            ->field('a.*,b.user_name,c.macno,d.username')
            ->order('a.ctime desc')
            ->where($map)
            ->page($page,$size)->select();
        $count = Db::name('device_order')->alias('a')
            ->join('shop b','b.shop_id=a.shop_id','left')
            ->join('device c','c.device_id=a.device_id','left')
            ->join('user d','d.user_id=a.staff_id','left')
            ->field('a.*,b.user_name,c.macno,d.username')
            ->where($map)->count();
        foreach ($result as $key => $value) {
            $goods = Db::name('device_orderinfo')->alias('a')
                ->join('goods b','b.goods_id=a.goods_id','left')
                ->where('order_id',$value['order_id'])
                ->field('a.*,b.title,b.img,b.price')
                ->select();
            $result[$key]['goods'] = $goods;
        }
        $this->getPage($count, $size, 'App-loader', '设备补货列表', 'App-search');
//        $this->assign('empty','<tr><td colspan="13" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        $this->assign('result',$result);
        $this->assign('staff_id',$staff_id);
        echo $this->fetch('');
    }
    /*
      * 员工补货详情
      */
    public function info()
    {
        $type = input('type');
        $pages= input('pagess');
        $bread = array(
            '0' => array(
                'name' => '员工管理',
                'url' => url('shop/user/replenishment'),
            ),
            '1' => array(
                'name' => '员工补货订单详情',
                'url' => url('shop/user/info'),
            ),
        );

        $this->assign('breadhtml', $this->getBread($bread));
        $order_id = input('order_id');
        $id= input('id');
        $p= input('p');
        $result = Db::name('device_order')->alias('a')
            ->join('user b','b.user_id=a.staff_id','left')
            ->join('device c','c.device_id=a.device_id','left')
            ->join('shop d','d.shop_id=a.shop_id','left')
            ->where(['a.order_id'=>$order_id])
            ->field('a.*,b.username,c.macno,d.user_name')
            ->find();
        $goods = DB::name('device_orderinfo')->alias('a')
//            ->join('dlc_device_goods b','b.goods_id=a.goods_id','left')
            ->join('dlc_goods c','c.goods_id=a.goods_id','left')
            ->field('a.*,c.title')->where('order_id',$result['order_id'])->select();
        foreach ($goods as $k=>$v){
            $goods[$k]['inventory']= $v['short'] + $v['num'];


        }

        $result['goods'] = $goods;
        $this->assign('result',$result);
        $this->assign('p',$p);
        $this->assign('id',$id);
        echo $this->fetch('');
    }
/************************* 员工列表结束 **************************/



    //用户开门记录
    public function devicelog(){
        $bread = array(
            '0' => array(
                'name' => '用户开门记录',
                'url' => url('dlc/User/devicelog'),
            ),

        );
        $nickname = trim(input('nickname'));
        $mobile = trim(input('mobile'));
        $macno = trim(input('macno'));
//        $user_name = trim(input('user_name'));
        $play_time = input('play_time') ? input('play_time') : '';
        if ($nickname){
            $condition['b.nickname'] = ['like','%'.$nickname.'%'];
            $this->assign('nickname',$nickname);
        }
        if ($mobile){
            $condition['b.mobile'] = ['like','%'.$mobile.'%'];
            $this->assign('mobile',$mobile);
        }
        if ($macno){
            $condition['c.macno'] = ['like','%'.$macno.'%'];
            $this->assign('macno',$macno);
        }
//        if ($user_name){
//            $condition['d.user_name'] = ['like','%'.$user_name.'%'];
//            $this->assign('user_name',$user_name);
//        }

        if ($play_time) {
            $timeArr = explode(" - ", $play_time);
            if (count($timeArr) < 2) {
                $timeArr = explode("+-+", $play_time);
            }
            $stime = strtotime(date('Y-m-d', strtotime($timeArr[0])));
            $etime = strtotime(date('Y-m-d', strtotime($timeArr[1])) . "23:59:59");
            $map['a.ctime'] = array('between', array($stime, $etime));
            $this->assign('play_time', $play_time);
        }
        $size =self::$CMS['set']['pagesize']?:20;
//        $psize =1;
        $page = input('page')?input('page'):1;
        $condition['a.type']=2;
        $condition['a.shop_id']=$this->shop_id;
        $result =db('device_open_log')->alias('a')
            ->join('dlc_user b','b.user_id=a.user_id','left')
            ->join('dlc_device c','c.device_id=a.device_id','left')
            ->field('a.*,b.nickname,b.mobile,c.macno')
            ->where($condition)->page($page,$size)->order('ctime desc')->select();
        //处理分页
        $count = db('device_open_log')->alias('a')
            ->join('dlc_user b','b.user_id=a.user_id','left')
            ->join('dlc_device c','c.device_id=a.device_id','left')
            ->where($condition)->count();
        $this->assign('result',$result);
        $this->assign('breadhtml', $this->getBread($bread));
        $this->getPage($count, $size, 'App-loader', '用户列表', 'App-search');
        $this->assign('empty','<tr><td colspan="9" style="line-height:32px;text-align:center;">暂无数据！</td></tr>');
        echo $this->fetch();
    }

    /**
     * 导出数据为excel表格
     * @param $data    一个二维数组,结构如同从数据库查出来的数组
     * @param $title   excel的第一行标题,一个数组,如果为空则没有标题
     * @param $filename 下载的文件名
     * @examlpe
     * $stu = M ('User');
     * $arr = $stu -> select();
     * exportexcel($arr,array('id','账户','密码','昵称'),'文件名!');
     */
    private function exportexcel($data = array(), $title = array(), $filename = 'report')
    {
        header("Content-type:application/octet-stream");
        header("Accept-Ranges:bytes");
        header("Content-type:application/vnd.ms-excel");
        header("Content-Disposition:attachment;filename=" . $filename . ".xls");
        header("Pragma: no-cache");
        header("Expires: 0");
        //导出xls 开始
        if (!empty($title)) {
            foreach ($title as $k => $v) {
                $title[$k] = iconv("UTF-8", "GB2312", $v);
            }
            $title = implode("\t", $title);
            echo "$title\n";
        }
        if (!empty($data)) {
            foreach ($data as $key => $val) {
                foreach ($val as $ck => $cv) {
                    $data[$key][$ck] = (string)(' '.(string)iconv("UTF-8", "GB2312", $cv).' ');
                }
                $data[$key] = (implode("\t", $data[$key]));
            }
            echo implode("\n", $data);
        }

    }
}